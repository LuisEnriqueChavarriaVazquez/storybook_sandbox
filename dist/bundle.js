(()=>{var t={410:()=>{class t extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='\n        <div>\n          <input type="text" id="amount" placeholder="Enter amount" />\n          <button id="format">Format</button>\n          <button id="parse">Parse</button>\n          <div id="result"></div>\n        </div>\n      ',this.intlSettings={locale:"en-US",currency:{symbol:"$",thousandSeparator:",",decimalSeparator:"."}},this.shadowRoot.querySelector("#format").addEventListener("click",this.handleFormat.bind(this)),this.shadowRoot.querySelector("#parse").addEventListener("click",this.handleParse.bind(this))}handleFormat(){const t=this.shadowRoot.querySelector("#amount").value,e=this.toCurrency({originalAmount:t,showCurrencySymbol:!0});this.shadowRoot.querySelector("#result").textContent=`Formatted: ${e}`}handleParse(){const t=this.shadowRoot.querySelector("#amount").value,e=this.currencyParser(t);this.shadowRoot.querySelector("#result").textContent=`Parsed: ${e}`}currencyParser(t){const{thousandSeparator:e,decimalSeparator:o}=this.intlSettings.currency,[n,r="00"]=this.getFloatNumbers(t).split(o),s=n.replaceAll(e,"");return parseFloat(`${s}.${r}`).toFixed(2)}toCurrency({originalAmount:t,showCurrencySymbol:e=!1,minimumFractionDigits:o=2}){const n=this.isFloat(this.getFloatNumbers(t.toString()))?+this.getFloatNumbers(t.toString()):+this.currencyParser(t.toString());if(isNaN(n))throw new Error("Invalid format");const r=new Intl.NumberFormat(this.intlSettings.locale,{useGrouping:!0,minimumFractionDigits:o}).format(n);return e?`${this.intlSettings.currency.symbol} ${r}`:r}getFloatNumbers(t){const e=t.match(/\d{1,17}(\.|,?)(\d{1,2})?/g);return e?e.join(""):""}isFloat(t){return/^\d+\.\d+$/.test(this.removeWhitespaces(t))}removeWhitespaces(t){return t?t.toString().replaceAll(/\s/g,""):""}}customElements.define("currency-converter",t)},246:()=>{class t extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='\n            <button id="myButton">Haz clic aquí</button>\n        ',this.shadowRoot.querySelector("#myButton").addEventListener("click",(()=>{this.dispatchEvent(new CustomEvent("button-click",{bubbles:!0,composed:!0}))}))}}window.customElements.define("my-button",t)},669:()=>{class t extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='\n\t\t\t<div id="textBox">Esperando clic...</div>\n\t\t\t<slot></slot>\n\t\t',document.addEventListener("button-click",(()=>{console.log("Evento recibido"),this.shadowRoot.querySelector("#textBox").innerText="¡Botón clickeado!"}))}}window.customElements.define("my-text-box",t)}},e={};function o(n){var r=e[n];if(void 0!==r)return r.exports;var s=e[n]={exports:{}};return t[n](s,s.exports,o),s.exports}o.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return o.d(e,{a:e}),e},o.d=(t,e)=>{for(var n in e)o.o(e,n)&&!o.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{"use strict";o(246),o(669),o(410),document.addEventListener("DOMContentLoaded",(function(){console.log("Aplicación cargada y lista.")}))})()})();