(()=>{var t={400:()=>{class t extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML="\n            <style>\n                /* Ensures the button is fully visible and styled */\n                :host {\n                    display: inline-block;\n                }\n\n                button {\n                    padding: 10px 20px;\n                    font-size: 16px;\n                    cursor: pointer;\n                    border: none;\n                    background-color: #007bff;\n                    color: white;\n                    border-radius: 4px;\n                }\n\n                button:hover {\n                    background-color: #0056b3;\n                }\n            </style>\n            <button><slot>Click Me</slot></button>\n        "}connectedCallback(){this.shadowRoot.querySelector("button").addEventListener("click",(()=>{const t=this.getAttribute("modalTrigger"),e=document.querySelector(`[modalTriggerName="${t}"]`);e&&e.setAttribute("open","")}))}}window.customElements.define("bpt-button-modal",t)},189:()=>{const t={US:{symbol:"$",position:"left",thousandSeparator:",",decimalSeparator:"."},EC:{symbol:"$",position:"right",thousandSeparator:".",decimalSeparator:","},PE:{symbol:"S/",position:"left",thousandSeparator:",",decimalSeparator:"."},MX:{symbol:"$",position:"left",thousandSeparator:",",decimalSeparator:"."},CL:{symbol:"$",position:"left",thousandSeparator:".",decimalSeparator:","},ES:{symbol:"â‚¬",position:"right",thousandSeparator:".",decimalSeparator:","},AR:{symbol:"$",position:"left",thousandSeparator:".",decimalSeparator:","},CO:{symbol:"$",position:"left",thousandSeparator:".",decimalSeparator:","}};class e extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='\n      <style>\n        :host {\n          --currency-color: #000;\n          --currency-font-size: 1.6rem;\n          --currency-symbol-margin: 0.2rem;\n          --currency-font-family: Arial, sans-serif;\n        }\n\n        div {\n          color: var(--currency-color);\n          font-size: var(--currency-font-size);\n          font-family: var(--currency-font-family);\n          display: block;\n        }\n\n        sup {\n          font-size: 1em;\n        }\n\n        .currency-symbol {\n          margin-right: var(--currency-symbol-margin);\n        }\n      </style>\n\n      \x3c!-- Slot for injecting custom styles --\x3e\n      <slot name="custom-styles"></slot>\n\n      <div part="result-container">\n        <div id="result"></div>\n      </div>\n    '}static get observedAttributes(){return["locale","amount"]}connectedCallback(){this.updateResult()}attributeChangedCallback(){this.updateResult()}updateResult(){const t=this.getAttribute("locale")||"US",e=this.getAttribute("amount")||"0";if(isNaN(e))return void(this.shadowRoot.querySelector("#result").textContent="Invalid number");const n=this.formatCurrency(e,t);this.shadowRoot.querySelector("#result").innerHTML=n}formatCurrency(e,n){const o=t[n.toUpperCase()]||t.US,r=parseFloat(e).toFixed(2),[i,s]=r.split(".");let a;return a=parseInt(i,10)>=1e6?i.replace(/\B(?=(\d{3})+(?!\d))/g,"'"):i.replace(/\B(?=(\d{3})+(?!\d))/g,o.thousandSeparator),"left"===o.position?`${o.symbol} ${a}<sup>${o.decimalSeparator}${s}</sup>`:`${a}<sup>${o.decimalSeparator}${s}</sup> ${o.symbol}`}}customElements.define("bpt-currency-converter",e)},565:()=>{class t extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='\n            <style>\n                /* General styles for the modal */\n                .modal {\n                    display: flex;\n                    position: fixed;\n                    top: 0;\n                    left: 0;\n                    width: 100%;\n                    height: 100%;\n                    background-color: rgba(0, 0, 0, 0.5);\n                    justify-content: center;\n                    align-items: center;\n                    opacity: 0;\n                    pointer-events: none;\n                    transition: opacity 0.3s ease;\n                    z-index: 10000; /* Ensure the modal is on top of everything */\n                }\n\n                .modal[open] {\n                    opacity: 1;\n                    pointer-events: auto;\n                }\n\n                .modal[closing] {\n                    opacity: 0;\n                    pointer-events: none;\n                }\n\n                /* Modal content styles */\n                .modal-content {\n                    background-color: white;\n                    padding: 20px;\n                    border-radius: 8px;\n                    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n                    position: relative;\n                    width: 70%;\n                    max-width: 800px;\n                    height: 300px;\n                    max-height: 90vh;\n                    overflow-y: auto;\n                }\n\n                /* Modal header styles */\n                .modal-header {\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                    padding-bottom: 15px;\n                    border-bottom: 1px solid #ccc;\n                    margin-bottom: 20px;\n                }\n\n                .modal-title {\n                    font-size: 24px;\n                    margin: 0;\n                    color: #333;\n                }\n\n                /* Close button styles */\n                .close-button {\n                    font-size: 24px;\n                    cursor: pointer;\n                    color: #333;\n                    background: none;\n                    border: none;\n                }\n\n                /* Additional styles for modal content */\n                .modal-content p {\n                    font-size: 18px;\n                    line-height: 1.6;\n                    color: #555;\n                }\n\n                .modal-content h1, .modal-content h2, .modal-content h3 {\n                    margin-top: 0;\n                    color: #333;\n                }\n\n                /* Styles for dynamic content added to the modal */\n                .additional-content {\n                    margin-top: 20px;\n                }\n            </style>\n\n            <div class="modal">\n                <div class="modal-content">\n                    <div class="modal-header">\n                        <h2 class="modal-title"></h2>\n                        <button class="close-button">&times;</button>\n                    </div>\n                    <slot></slot>\n                    <div class="additional-content"></div>\n                </div>\n            </div>\n        '}connectedCallback(){const t=this.shadowRoot.querySelector(".modal"),e=this.shadowRoot.querySelector(".close-button"),n=this.shadowRoot.querySelector(".modal-title"),o=this.shadowRoot.querySelector(".additional-content"),r=this.getAttribute("modal-title");r&&(n.textContent=r);const i=this.getAttribute("modal-content");i&&(o.innerHTML=i),e.addEventListener("click",(()=>{this.closeModal(t)})),t.addEventListener("click",(e=>{e.target===t&&this.closeModal(t)})),this.hasAttribute("open")&&t.setAttribute("open","")}static get observedAttributes(){return["open","modal-title","modal-content"]}attributeChangedCallback(t,e,n){const o=this.shadowRoot.querySelector(".modal"),r=this.shadowRoot.querySelector(".modal-title"),i=this.shadowRoot.querySelector(".additional-content");"open"===t&&(null!==n?o.setAttribute("open",""):this.closeModal(o)),"modal-title"===t&&(r.textContent=n||""),"modal-content"===t&&(i.innerHTML=n||"")}closeModal(t){t.setAttribute("closing",""),setTimeout((()=>{t.removeAttribute("open"),t.removeAttribute("closing"),this.removeAttribute("open")}),300)}}window.customElements.define("bpt-modal",t)},800:()=>{class t extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='\n          <style>\n              /* General styles for the sidebar */\n              .sidebar {\n                  width: 250px;\n                  height: 100vh;\n                  background-color: #333;\n                  padding: 20px;\n                  position: fixed;\n                  top: 0;\n                  left: 0;\n                  overflow-y: auto;\n                  box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);\n              }\n\n              .sidebar h2 {\n                  color: #fff;\n                  font-size: 20px;\n                  margin-bottom: 20px;\n              }\n\n              .sidebar ul {\n                  list-style: none;\n                  padding: 0;\n              }\n\n              .sidebar ul li {\n                  margin-bottom: 10px;\n              }\n\n              .sidebar ul li a {\n                  color: #fff;\n                  text-decoration: none;\n                  font-size: 18px;\n                  display: block;\n                  padding: 10px;\n                  border-radius: 4px;\n                  transition: background-color 0.3s;\n                  cursor: pointer;\n              }\n\n              .sidebar ul li a:hover {\n                  background-color: #575757;\n              }\n\n              /* Style for the active link */\n              .sidebar ul li a.active {\n                  background-color: #007bff;\n              }\n          </style>\n          <div class="sidebar">\n              <h2>Sidebar Component BPT</h2>\n              <ul></ul>\n          </div>\n      '}connectedCallback(){const t=this.shadowRoot.querySelector("ul"),e=this.getAttribute("items"),n=this.getAttribute("defaultsection");if(e){const o=JSON.parse(e);o.forEach((e=>{const n=document.createElement("li"),o=document.createElement("a");o.textContent=e.name,o.setAttribute("data-target",e.link),n.appendChild(o),t.appendChild(n),o.addEventListener("click",(t=>{t.preventDefault(),this.showSection(e.link),this.updateActiveLink(o)}))})),n?(this.showSection(n),this.setInitialActiveLink(n,o)):o.length>0&&(this.showSection(o[0].link),this.updateActiveLink(t.querySelector("a")))}}showSection(t){document.querySelectorAll("section").forEach((t=>{t.style.display="none"}));const e=document.querySelector(t);e&&(e.style.display="block")}updateActiveLink(t){this.shadowRoot.querySelectorAll("a").forEach((t=>{t.classList.remove("active")})),t.classList.add("active")}setInitialActiveLink(t,e){const n=this.shadowRoot.querySelector("ul");if(e.find((e=>e.link===t))){const e=n.querySelector(`a[data-target='${t}']`);this.updateActiveLink(e)}}}window.customElements.define("bpt-sidebar",t)},413:()=>{class t extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.currentStep=0,this.steps=[],this.instructionData=[],this.characterType="number",this.prevButtonText="Volver",this.nextButtonText="Avanzar",this.finishButtonText="Finalizar",this.shadowRoot.innerHTML=`\n\t\t<style>\n\t\t  :host {\n\t\t\t--stepper-color: #007bff;\n\t\t\t--stepper-background: #f1f1f1;\n\t\t\t--stepper-completed-color: #28a745;\n\t\t\t--stepper-font-family: Arial, sans-serif;\n\t\t\twidth: 100%;\n\t\t\tdisplay: block;\n\t\t  }\n  \n\t\t  .stepper {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: space-between;\n\t\t\tfont-family: var(--stepper-font-family);\n\t\t\twidth: 100%;\n\t\t  }\n  \n\t\t  .step {\n\t\t\tposition: relative;\n\t\t\tpadding: 0.5rem;\n\t\t\tbackground-color: var(--stepper-background);\n\t\t\tborder-radius: 50%;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: center;\n\t\t\tcursor: pointer;\n\t\t\tfont-size: 1.2rem;\n\t\t\tcolor: var(--stepper-color);\n\t\t\tz-index: 1;\n\t\t\ttransition: background-color 0.3s ease, color 0.3s ease;\n\t\t\twidth: 30px;\n\t\t\theight: 30px;\n\t\t  }\n  \n\t\t  .step.active {\n\t\t\tbackground-color: var(--stepper-color);\n\t\t\tcolor: #fff;\n\t\t  }\n  \n\t\t  .step.completed {\n\t\t\tbackground-color: var(--stepper-completed-color);\n\t\t\tcolor: #fff;\n\t\t  }\n  \n\t\t  .connector {\n\t\t\tflex-grow: 1;\n\t\t\theight: 10px;\n\t\t\tbackground: linear-gradient(90deg, var(--stepper-color) 50%, var(--stepper-background) 50%);\n\t\t\tbackground-size: 200% 100%;\n\t\t\tbackground-position: 100%;\n\t\t\ttransition: background-position .5s ease;\n\t\t\tmargin: 0 -1px;\n\t\t\tz-index: 0;\n\t\t  }\n  \n\t\t  .connector.animated {\n\t\t\tbackground-position: 0;\n\t\t  }\n\n\t \t  .connector.animatedBack {\n\t\t  \tbackground-position: 100%;\n\t\t  }\n  \n\t\t  .navigation-buttons {\n\t\t\tmargin-top: 1rem;\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-between;\n\t\t  }\n  \n\t\t  button {\n\t\t\tpadding: 0.5rem 1rem;\n\t\t\tfont-size: 1rem;\n\t\t\tcursor: pointer;\n\t\t\tbackground-color: var(--stepper-color);\n\t\t\tcolor: #fff;\n\t\t\tborder: none;\n\t\t\tborder-radius: 5px;\n\t\t  }\n  \n\t\t  button:disabled {\n\t\t\tbackground-color: #ccc;\n\t\t\tcursor: not-allowed;\n\t\t  }\n  \n\t\t  .instruction {\n\t\t\tmargin-top: 1rem;\n\t\t\tfont-size: 1rem;\n\t\t\ttext-align: center;\n\t\t  }\n\n\t\t  .connectorActive{\n\t\t \tbackground: var(--stepper-completed-color); \n\t\t  }\n\t\t</style>\n  \n\t\t\x3c!-- Stepper Container --\x3e\n\t\t<div class="stepper" id="stepper-container"></div>\n  \n\t\t\x3c!-- Instruction Text --\x3e\n\t\t<div class="instruction" id="instruction-text"></div>\n  \n\t\t\x3c!-- Navigation Buttons --\x3e\n\t\t<div class="navigation-buttons">\n\t\t  <button id="prev-btn">${this.prevButtonText}</button>\n\t\t  <button id="next-btn">${this.nextButtonText}</button>\n\t\t</div>\n\t  `}connectedCallback(){this.initializeStepper(),this.renderStepper(),this.updateButtons(),this.shadowRoot.querySelector("#next-btn").addEventListener("click",(()=>this.nextStep())),this.shadowRoot.querySelector("#prev-btn").addEventListener("click",(()=>this.prevStep()))}initializeStepper(){const t=parseInt(this.getAttribute("steps"),10);if(isNaN(t)||t<1||t>10)return void console.error("El nÃºmero de pasos debe estar entre 1 y 10.");this.steps=Array.from({length:t}),this.characterType=this.getAttribute("stepsCharacter")||"number",this.prevButtonText=this.getAttribute("prevButtonText")||"Volver",this.nextButtonText=this.getAttribute("nextButtonText")||"Avanzar",this.finishButtonText=this.getAttribute("finishButtonText")||"Finalizar";const e=this.getAttribute("instruction");try{this.instructionData=JSON.parse(e),Array.isArray(this.instructionData)||(console.error("El atributo 'instruction' debe ser un array de objetos."),this.instructionData=[])}catch(t){console.error("El atributo 'instruction' debe ser un array JSON vÃ¡lido.")}}getStepCharacter(t){switch(this.characterType){case"upper":return String.fromCharCode(65+t);case"lower":return String.fromCharCode(97+t);default:return t+1}}renderStepper(){const t=this.shadowRoot.querySelector("#stepper-container"),e=this.shadowRoot.querySelector("#instruction-text");t.innerHTML="",this.steps.forEach(((e,n)=>{if(n>0){const e=document.createElement("div");e.classList.add("connector"),n<=this.currentStep&&e.classList.add("animated"),t.appendChild(e)}const o=document.createElement("div");o.classList.add("step"),n<this.currentStep&&o.classList.add("completed"),n===this.currentStep&&o.classList.add("active"),o.textContent=this.getStepCharacter(n),t.appendChild(o)})),this.instructionData[this.currentStep]&&(e.innerHTML=`<b>Paso ${this.getStepCharacter(this.currentStep)}.</b> ${this.instructionData[this.currentStep].text}`)}updateButtons(){const t=this.shadowRoot.querySelector("#next-btn");this.shadowRoot.querySelector("#prev-btn").disabled=0===this.currentStep,this.currentStep===this.steps.length-1?t.textContent=this.finishButtonText:t.textContent=this.nextButtonText}async nextStep(){this.currentStep<this.steps.length-1&&(this.animateConnector(this.currentStep),await this.delay(550),this.currentStep++,this.renderStepper(),this.updateButtons())}async prevStep(){this.currentStep>0&&(this.animateConnectorBack(this.currentStep),await this.delay(550),this.currentStep--,this.renderStepper(),this.updateButtons())}animateConnector(t){const e=this.shadowRoot.querySelectorAll(".connector");e[t]&&e[t].classList.add("animated")}animateConnectorBack(t){const e=this.shadowRoot.querySelectorAll(".connector");e[t-1]&&e[t-1].classList.add("animatedBack")}paintConnectors(t){const e=this.shadowRoot.querySelectorAll(".connector");e[e.length-1]&&e[e.length-1].classList.add(".connectorActive")}delay(t){return new Promise((e=>setTimeout(e,t)))}}customElements.define("btp-stepper",t)}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={exports:{}};return t[o](i,i.exports,n),i.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{"use strict";n(189),n(413),n(565),n(400),n(800),document.addEventListener("DOMContentLoaded",(function(){console.log("AplicaciÃ³n cargada y lista.")}))})()})();